#!/bin/bash

set -eux

trap 'kill $(jobs -p)' EXIT

ISTIO_VERSION=1.8.1
ISTIO_PATH="./istio-${ISTIO_VERSION}"

if [[ -d $ISTIO_PATH ]]
then
	echo "detected istio is installed"
else
	curl -L https://istio.io/downloadIstio | sh -
fi

minikube start
trap 'minikube delete' EXIT

ISTIOCTL=./${ISTIO_PATH}/bin/istioctl

${ISTIOCTL} install --set profile=demo -y

kubectl label namespace default istio-injection=enabled --overwrite
kubectl apply -f ${ISTIO_PATH}/samples/bookinfo/platform/kube/bookinfo.yaml

kubectl get services
kubectl get pods
kubectl rollout status deployment/ratings-v1
kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -s productpage:9080/productpage | grep -o "<title>.*</title>"
kubectl apply -f ${ISTIO_PATH}/samples/bookinfo/networking/bookinfo-gateway.yaml
${ISTIOCTL} analyze

export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

echo "$INGRESS_PORT"
echo "$SECURE_INGRESS_PORT"
export INGRESS_HOST=$(minikube ip)
echo "$INGRESS_HOST"
minikube tunnel > /dev/null &

export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
echo "$GATEWAY_URL"
echo "http://$GATEWAY_URL/productpage"
open "http://$GATEWAY_URL/productpage"

kubectl apply -f ${ISTIO_PATH}/samples/addons
kubectl rollout status deployment/kiali -n istio-system
${ISTIOCTL} dashboard kiali
